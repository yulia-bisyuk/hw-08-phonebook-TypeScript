{"version":3,"file":"static/js/715.5eec0070.chunk.js","mappings":"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","sources":["components/AuthRedirect/AuthRedirect.styled.js","components/AuthRedirect/AuthRedirect.jsx","components/ContactForm/ContactForm.styled.js","pages/HomePage/HomePage.styled.js","constants/userValidationSchema.js","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst RedirectLink = styled(Link)`\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  width: fit-content;\n  text-decoration: none;\n  color: ${props => props.theme.darkBlue};\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Text = styled.span`\n  display: block;\n  text-align: center;\n  margin-top: 30px;\n  margin-bottom: 8px;\n  color: ${props => props.theme.darkGrey};\n`;\nexport { Text, RedirectLink };\n","import { RedirectLink, Text } from './AuthRedirect.styled';\n\nconst AuthRedirect = ({ page, text }) => {\n  return (\n    <>\n      <Text>or</Text>\n      <RedirectLink to={page}>{text}</RedirectLink>\n    </>\n  );\n};\n\nexport default AuthRedirect;\n","import styled from 'styled-components';\n\nconst FormLabel = styled.label`\n  display: block;\n  text-align: center;\n  color: ${props => props.theme.darkGrey};\n  font-weight: 600;\n`;\nconst FormInput = styled.input`\n  display: block;\n  width: 340px;\n  height: 24px;\n  margin-bottom: 24px;\n  margin-top: 8px;\n  padding-left: 8px;\n  border: 1px solid ${props => props.theme.darkBlue};\n  border-radius: 5px;\n`;\nconst SubmitBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  width: 148px;\n  height: 40px;\n  border-style: solid;\n  border-radius: 5px;\n  border-width: 2px;\n  border-color: ${props => props.theme.darkBlue};\n  background-color: ${props => props.theme.darkBlue};\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  transition-property: transform;\n  transition-duration: 500ms;\n\n  &:hover {\n    transform: scale(1.08);\n  }\n`;\nconst ErrorMessage = styled.div`\n  margin-bottom: 12px;\n  font-weight: 400;\n  font-size: 12px;\n  width: 340px;\n  color: red;\n  text-align: left;\n`;\n\nexport { FormLabel, FormInput, SubmitBtn, ErrorMessage };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageWrapper = styled.div`\n  width: 340px;\n  height: fit-content;\n`;\nconst PageTitle = styled.h1`\n  color: ${props => props.theme.darkBlue};\n  margin-top: 0px;\n  margin-bottom: 30px;\n  font-size: 40px;\n  font-weight: 700;\n  text-align: center;\n`;\nconst InvitationTitle = styled.h2`\n  color: ${props => props.theme.darkBlue};\n  margin-top: 0px;\n  margin-bottom: 30px;\n  font-size: 20px;\n  text-align: center;\n`;\nconst AuthLink = styled(Link)`\n  display: block;\n  padding: 10px 15px;\n  margin-right: auto;\n  margin-left: auto;\n  :not(:last-child) {\n    margin-bottom: 60px;\n  }\n  text-align: center;\n  text-decoration: none;\n  width: 148px;\n  border-radius: 5px;\n  background-color: ${props => props.theme.darkBlue};\n  color: white;\n  font-size: 16px;\n  transition-property: transform;\n  transition-duration: 500ms;\n\n  &:hover {\n    transform: scale(1.08);\n  }\n`;\nconst IconWrapper = styled.div`\n  justify-content: center;\n  display: flex;\n  margin-bottom: 20px;\n`;\nconst Text = styled.p`\n  color: ${props => props.theme.darkBlue};\n  font-size: 18px;\n  text-align: center;\n  margin-top: 0px;\n  margin-bottom: 10px;\n`;\nexport { PageWrapper, InvitationTitle, PageTitle, AuthLink, IconWrapper, Text };\n","import * as Yup from 'yup';\n\nexport const userValidationSchema = Yup.object({\n  name: Yup.string().required('* Required'),\n  email: Yup.string()\n    .matches(\n      /^[\\w-|.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n      '* Email must contain \"@\" and \".\" characters and may contain \"-\" and \".\"characters before @'\n    )\n    .required('* Required'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n      '* Minimum eight characters, at least one letter and one number'\n    )\n    .required('* Required'),\n});\n","import { Formik } from 'formik';\nimport { userValidationSchema } from 'constants/userValidationSchema';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../../constants/theme';\nimport { FaUserPlus } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport {\n  FormLabel,\n  FormInput,\n  SubmitBtn,\n  ErrorMessage,\n} from '../../components/ContactForm/ContactForm.styled';\nimport {\n  PageWrapper,\n  PageTitle,\n  IconWrapper,\n} from 'pages/HomePage/HomePage.styled';\nimport AuthRedirect from 'components/AuthRedirect';\nimport { useRegistrationMutation } from '../../redux/authentication/authApi';\n\nconst RegistrationPage = () => {\n  const [registerUser] = useRegistrationMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    registerUser(values);\n    resetForm();\n  };\n\n  return (\n    <PageWrapper>\n      <ThemeProvider theme={theme}>\n        <PageTitle>Registration</PageTitle>\n        <IconWrapper>\n          <IconContext.Provider value={{ color: '#0c005a', size: '30px' }}>\n            <FaUserPlus />\n          </IconContext.Provider>\n        </IconWrapper>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={userValidationSchema}\n          onSubmit={(values, actions) => handleSubmit(values, actions)}\n        >\n          {formik => (\n            <form onSubmit={formik.handleSubmit}>\n              <FormLabel>\n                Name\n                <FormInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  {...formik.getFieldProps('name')}\n                />\n                {formik.touched.name && formik.errors.name ? (\n                  <ErrorMessage>{formik.errors.name}</ErrorMessage>\n                ) : null}\n              </FormLabel>\n\n              <FormLabel>\n                Email\n                <FormInput\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  {...formik.getFieldProps('email')}\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <ErrorMessage>{formik.errors.email}</ErrorMessage>\n                ) : null}\n              </FormLabel>\n\n              <FormLabel htmlFor=\"password\">\n                Password\n                <FormInput\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  {...formik.getFieldProps('password')}\n                />\n                {formik.touched.password && formik.errors.password ? (\n                  <ErrorMessage>{formik.errors.password}</ErrorMessage>\n                ) : null}\n              </FormLabel>\n\n              <SubmitBtn type=\"submit\">Register</SubmitBtn>\n            </form>\n          )}\n        </Formik>\n\n        <AuthRedirect page=\"/login\" text=\"Log in\" />\n      </ThemeProvider>\n    </PageWrapper>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RedirectLink","styled","Link","props","theme","darkBlue","Text","darkGrey","page","text","to","FormLabel","FormInput","SubmitBtn","ErrorMessage","PageWrapper","PageTitle","InvitationTitle","AuthLink","IconWrapper","userValidationSchema","Yup","name","required","email","matches","password","useRegistrationMutation","registerUser","value","color","size","initialValues","validationSchema","onSubmit","values","actions","resetForm","handleSubmit","formik","id","type","getFieldProps","touched","errors","htmlFor","AuthRedirect"],"sourceRoot":""}